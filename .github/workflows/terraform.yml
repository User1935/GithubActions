name: 'Terragrunt GitHub Actions'
on:
   [push, pull_request]
  

env:
  tf_working_dir: './CVT-IaC-Live-AZURE/CF/CF-NonProd/L3/RG-1'
  STORAGE_KEY: ${{secrets.STORAGE_KEY}}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAGRUNT_DOWNLOAD: '.terragrunt-cache'
jobs:
  pre-commit:
    name: 'Pre-Commit'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Pre-Commit'
        id: 'pre-commit'
        continue-on-error: true
        uses: ./actions/pre-commit

      #- name: 'Convert to Markdown file'
      #  id: 'to-markdown'
      #  continue-on-error: true
      #  run: |
      #    sudo apt install php-league-html-to-markdown colorized-logs
      #    echo '${{ steps.pre-commit.outputs.filecontent }}' > ./actions/node/tempfile.md
      #    echo ::set-output name=markdown::$(cat ./actions/node/tempfile.md)
      #    echo ::debug:: Content of file: $(cat ./actions/node/tempfile.md)
#
      #|
      # html-to-markdown document.html > ./actions/node/tempfile.md
      # 
      #    npm install turndown --save
      #    npm install @octokit/core

      #- name: 'Make File with Content'
      #  run: node ./actions/node/writeFile.js
      #  env:
      #    FILE_INPUT:  '${{ steps.pre-commit.outputs.filecontent }}'
      #    FILE_OUTPUT: './actions/node/tempfile.md'
      - name: Create a File with something
        id: file
        run: |
          sudo apt-get install colorized-logs 
          echo " ${{ steps.pre-commit.outputs.filecontent }}" | base64 -d > temp.raw
          ansi2html < temp.raw | base64 > temp.html
          echo ::set-output name=html:: $(cat temp.html)

      - name: Comment-push
        if: github.event_name != 'pull_request'
        uses: ./actions/commit-comment #'peter-evans/commit-comment@v1'
        with:
          body: ${{ steps.pre-commit.outputs.filecontent }} #${{ steps.file.outputs.html }}  #${{ steps.pre-commit.outputs.filecontent }} #${{ steps.to-markdown.outputs.markdown }}
#
      #- uses: actions/github-script@v6
      #  with:
      #    script: |
      #      github.rest.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: "${{ steps.pre-commit.outputs.filecontent }}""
      #      })
#
      #- name: "Bash Comment"
      #  uses: "./actions/bash"
      #  continue-on-error: true
      #  with:
      #    INPUT: '${{ steps.pre-commit.outputs.filecontent }}'
      
      #- name: "Bash Comment"
      #  run: |
      #    chmod +x ./actions/bash/src/script.sh
      #    bash ./actions/bash/src/script.sh
      #  env:
      #    INPUT: '${{ steps.pre-commit.outputs.filecontent }}'
#
      #- name: Comment
      #  id: compost-comment
      #  uses: infracost/compost-action@master
      #  with:
      #    body-file: './actions/node/tempfile.md'
      #    github-token: '${{ env.GITHUB_TOKEN }}'
#     -------------------------------------------------------------
      #- name: Comment
      #  uses: actions/github-script@v6
      #  with:
      #    script: |
      #      github.rest.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: 'ðŸ‘‹ Thanks for reporting!'
      #      })

      #- name: comment on PR with Binder link
      #  uses: actions/github-script@v3
      #  with:
      #    github-token: ${{secrets.GITHUB_TOKEN}}
      #    script: |
      #      var PR_HEAD_USERREPO = process.env.PR_HEAD_USERREPO;
      #      var PR_HEAD_REF = process.env.PR_HEAD_REF;
      #      github.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: `ðŸ‘‹ Thanks for reporting!`
      #      })
      #  env:
      #    PR_HEAD_REF: ${{ github.event.pull_request.head.ref }}
      #    PR_HEAD_USERREPO: ${{ github.event.pull_request.head.repo.full_name }}
      # -------------------------------------------------------------------------

  Pull_InfraCost:
    if: github.event_name == 'pull_request'
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false ## This is recommended so the `terraform show` command outputs valid JSON

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9
      
      - name: Install TgSwitch
        run: curl -L https://raw.githubusercontent.com/warrensbox/tgswitch/release/install.sh | bash

      - name: Install TFenv
        run: brew install tfenv
      
      - name: 'ChangedFiles'
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: 'List Changed Files'
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "Do something with this ${changed_file}."
          done

      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
          
      - name: Run Infracost
        run: infracost breakdown --path=${{ env.tf_working_dir }} --format=json --out-file=${{ env.tf_working_dir }}infracost.json
        
      - name: Post the comment
        uses: infracost/actions/comment@v1
        with:
          path: ${{ env.tf_working_dir }}infracost.json
          behavior: new

  Push_Terragrunt:
    if: github.event_name != 'pull_request'
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9

      - name: Install TgSwitch
        continue-on-error: true
        run: sudo curl -L https://raw.githubusercontent.com/warrensbox/tgswitch/release/install.sh | bash

      - name: Install TFenv
        continue-on-error: true
        run: brew install tfenv

      - name: 'ChangedFiles'
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: 'List Changed Files'
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "Do something with this ${changed_file}."
          done

      

#the-commons-project/terragrunt-github-actions@master
