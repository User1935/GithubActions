name: 'Terragrunt GitHub Actions'
on:
  - push

defaults:
  run:
    working-directory: ./CVT-IaC-Live-GCP
env:
  az_APPID: ${{secrets.APPID}}
  az_APPTENANT: ${{secrets.APPTENANT}}
  az_SECRET: ${{secrets.SECRET}}
  az_SUBID: ${{secrets.TEST_SECRET}}
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: './CVT-IaC-Live-AZURE/ci-prod/ci-prod-vnet/'
  GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
  STORAGE_KEY: ${{secrets.STORAGE_KEY}}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
#      - name: Log in with Azure
#        uses: azure/login@v1
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: 'PWD'
        run: pwd
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: get secrets
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.TEST_SECRET }}" >> $GITHUB_ENV
          echo GITHUB_END: $GITHUB_END
      - name: 'Terragrunt Format'
        uses:  ./action
        continue-on-error: true
        with:
          az_APPID:  ${{ env.az_APPID }}
          az_TENANTID:  ${{ env.az_APPTENANT }}
          az_SECRET:  ${{ env.az_SECRET }}
          az_SUBID: ${{secrets.TEST_SECRET}}
          az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terragrunt'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
      - name: 'Terragrunt Init'
        uses: ./action
        with:
          az_APPID:  ${{ env.az_APPID }}
          az_TENANTID:  ${{ env.az_APPTENANT }}
          az_SECRET:  ${{ env.az_SECRET }}
          az_SUBID: ${{secrets.TEST_SECRET}}
          az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terragrunt'
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
      - name: 'Terragrunt Validate'
        uses: ./action
        with:
          az_APPID:  ${{ env.az_APPID }}
          az_TENANTID:  ${{ env.az_APPTENANT }}
          az_SECRET:  ${{ env.az_SECRET }}
          az_SUBID: ${{secrets.TEST_SECRET}}
          az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terragrunt'
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
      - name: 'Terragrunt Plan'
        uses: ./action
        continue-on-error: true
        with:
          az_APPID:  ${{ env.az_APPID }}
          az_TENANTID:  ${{ env.az_APPTENANT }}
          az_SECRET:  ${{ env.az_SECRET }}
          az_SUBID: ${{secrets.TEST_SECRET}}
          az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terragrunt'
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
      - name: 'Render terraform docs and push changes back to PR'
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true" 
#the-commons-project/terragrunt-github-actions@master
