name: 'Plan Create and Plan destroy'
on:
  pull_request:
    branches:
      - 'main'

  pull_request_review:
    types:
      - "edited"

    branches:
      - 'main'

env:
  tf_working_dir: './CVT-IaC-Live-AZURE/CF/CF-NonProd/L3/RG-1'
  STORAGE_KEY: ${{secrets.STORAGE_KEY}}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAGRUNT_DOWNLOAD: '.terragrunt-cache'
jobs:
  pre-commit:
   name: 'Pre-Commit'
   runs-on: ubuntu-latest
   steps:
     - name: 'Checkout'
       uses: actions/checkout@v3
       with:
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GITPAT }}

     - name: 'Check dependencies'
       id: 'dep-check'
       uses: ./.github/actions/depend-check

     - name: Cache dependencies
       id: cache
       uses: actions/cache@v3
       with:
         path: |
          /home/runner/cache
          ${{ steps.dep-check.outputs.pythonpath }}
         key: ${{ runner.os }}-${{ steps.dep-check.outputs.hash }}
    # ${{ hashFiles('dep') }}

     - name: 'Install dependencies'
       if: steps.cache.outputs.cache-hit != 'true'
       uses: ./.github/actions/depend-install

     - name: 'Pre-Commit'
       continue-on-error: true
       uses: ./.github/actions/pre-commit

     - name: 'Pre-Commit_Output'
       id: pre-commit
       uses: ./.github/actions/pre-commit-output

     - name: Comment-push
       if: github.event_name != 'pull_request'
       continue-on-error: true
       uses: ./.github/actions/commit-comment  #'peter-evans/commit-comment@v1'
       with:
         body: ${{ steps.pre-commit.outputs.output }} ##${{ steps.pre-commit.outputs.precommit_output }}

     - name: 'Remove files'
       run: |
        rm something.txt
        rm dep2
       shell: bash

     - name: Push Changes
       continue-on-error: true
       uses: ./.github/actions/pushchanges  

  Pull_InfraCost:
    if: github.event_name == 'pull_request'
    name: 'Infracost-pull'
    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITPAT }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false ## This is recommended so the `terraform show` command outputs valid JSON

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9

      #- name: Install TgSwitch
      #  run: curl -L https://raw.githubusercontent.com/warrensbox/tgswitch/release/install.sh | bash

      #- name: Install TFenv
      #  run: brew install tfenv

      - name: 'Terragrunt init-plan'
        continue-on-error: true
        run: |
          terragrunt init
          terragrunt plan-all

      - name: 'ChangedFiles'
        id: set-matrix
        uses: ./.github/actions/generate-matrix

      - name: 'Create infracost.yml'
        run: python ./.github/scripts/infracost_constructor.py ${JSONCREATE}

      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost
        run: |
          infracost breakdown --config-file=infracost.yml --format=json --out-file=infracost.json
          echo [FILECONTENT - INFRACOST CONFIG] $(cat infracost.yml)
          echo [FILECONTENT - INFRACOST] $(cat infracost.json)

      - name: Post the comment
        uses: infracost/actions/comment@v1
        with:
          path: infracost.json
          behavior: new

  generate-matrix:
      name: 'Generate matrix for build'
      runs-on: ubuntu-latest

      outputs:
        matrix: ${{ steps.set-output.outputs.matrix }}
        matrix2: ${{ steps.set-output.outputs.matrix2 }}
        BASE_SHA: ${{ steps.set-ouput.outputs.BASE_SHA }}
      steps:

        - uses: actions/checkout@v3

        - name: Create Matrixes
          id: set-matrix
          uses: ./.github/actions/generate-matrix

        - uses: actions/checkout@v3
          with:
            ref: ${{ github.head_ref }}

        - name: Outputs
          id: set-output
          run: |
            echo $(pwd)
            echo $JSON > ./.github/context/deleted-dir
            echo $JSONCREATE > ./.github/context/created-dir

            echo "::set-output name=matrix::$JSON"
            echo "::set-output name=matrix2::$JSONCREATE "
            echo Upload made to branch ${{ github.head_ref }}

            #git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
            #git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
            #git add .
            #git commit -m "[no ci] Changes made by pipeline"
            #git push

            echo  ${{ steps.set-matrix.outputs.matrix }}
            echo  ${{ steps.set-matrix.outputs.matrix2 }}
            echo  ${{ steps.set-matrix.outputs.BASE_SHA }}

        - name: Push Changes
          continue-on-error: true
          uses: ./.github/actions/pushchanges

  Plan:
    name: 'All the resource plannings'
    if: ${{ needs.generate-matrix.outputs.matrix2 }} != '{"include":[]}'
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix2)}}
    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: Feature/pipeline


      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9


      - name: Run TerraGrunt
        working-directory: ${{ matrix.path }}
        run: |
          echo "::debug:: PWD - $(pwd)"
          echo "::debug:: BRANCH - ${GITHUB_REF#refs/heads/}"
          echo terragrunt init --working-directory ${{ matrix.path }}
          echo terragrunt plan --working-directory ${{ matrix.path }}
          terragrunt init
          terragrunt plan -no-color  --terragrunt-include-external-dependencies -out output-planfile > output-planfile 2>&1
          echo $(cat output-planfile)

      # logging
      - uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        if: always()
        with:
          name: my-artifact
          path: ${{ matrix.path }}/output-planfile

      - name: 'Terragrunt Output'
        id: terragrunt
        uses: ./.github/actions/pre-commit-output
        env:
          INPUT_TYPE: "terragrunt"
          INPUT_FILEPATH: ${{ matrix.path }}


      - name: Comment-push
        uses: ./.github/actions/commit-comment  #'peter-evans/commit-comment@v1'
        with:
          body: ${{ steps.terragrunt.outputs.output }} #${{ steps.pre-commit.outputs.precommit_output }}



  Destroy:
    name: 'All the destroy plannings'
    if: ${{ needs.generate-matrix.outputs.matrix }} != '{"include":[]}'
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}

    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9

      - name: Run TerraGrunt
        working-directory: ${{ matrix.path }}
        run: |
          echo Branch: $(git log --merges $GITHUB_SHA)
          echo terragrunt init
          echo terragrunt plan -destroy
          terragrunt init
          terragrunt plan -destroy -no-color --terragrunt-include-external-dependencies -out output-planfile > output-planfile 2>&1
          echo $(cat output-planfile)

      # logging
      - uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        if: always()
        with:
          name: my-artifact
          path: ${{ matrix.path }}/output-planfile


      - name: 'Terragrunt Output'
        id: terragrunt
        uses: ./.github/actions/pre-commit-output
        env:
          INPUT_TYPE: "terragrunt"
          INPUT_FILEPATH: ${{ matrix.path }}

      - name: Comment-push
        uses: ./.github/actions/commit-comment  #'peter-evans/commit-comment@v1'
        with:
          body: ${{ steps.terragrunt.outputs.output }} #${{ steps.pre-commit.outputs.precommit_output }}
