name: 'Terragrunt GitHub Actions'
on:
  push:
    branches:
      - main
      # - 'main/CVT-IaC-Live-AZURE'

env:
  az_APPID: ${{secrets.APPID}}
  az_APPTENANT: ${{secrets.APPTENANT}}
  az_SECRET: ${{secrets.SECRET}}
  az_SUBID: ${{secrets.TEST_SECRET}}
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: './CVT-IaC-Live-AZURE/ci-prod/ci-prod-vnet/'
  GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
  STORAGE_KEY: ${{secrets.STORAGE_KEY}}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAGRUNT_DOWNLOAD: '.terragrunt-cache'
jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Pre-Commit'
        id: 'pre-commit'
        continue-on-error: true
        uses: ./pre-commit

      - name: 'Make File with Content'
        run: 'node ./node/writeFile.js'

#      - name: 'Make File with Content'
##        run: echo '${{ steps.pre-commit.outputs.filecontent }}' > something.md
      
      - name: Comment
        id: compost-comment
        uses: infracost/compost-action@master
        with:
          body-file: tempfile.md
          github-token: ${{ inputs.github-token }}

#      # ${{ steps.pre-commit.outputs.filecontent }}
#      - name: 'Comment Pre-Commit comment'
#        run:  export INFRACOST_CI_POST_CONDITION=update
#
#      - name: comment on PR with Binder link
#        uses: actions/github-script@v3
#        with:
#          github-token: ${{secrets.GITHUB_TOKEN}}
#          script: |
#            var PR_HEAD_USERREPO = process.env.PR_HEAD_USERREPO;
#            var PR_HEAD_REF = process.env.PR_HEAD_REF;
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: `derd`
#            })
#        env:
#          PR_HEAD_REF: ${{ github.event.pull_request.head.ref }}
#          PR_HEAD_USERREPO: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.9
     

      #- name: 'Terragrunt Format'
      #  uses:  ./action
      #  continue-on-error: true
      #  with:
      #    sops_path: "./secure/stuff.yaml"
      #    az_APPID:  ${{ env.az_APPID }}
      #    az_TENANTID:  ${{ env.az_APPTENANT }}
      #    az_SECRET:  ${{ env.az_SECRET }}
      #    az_SUBID: ${{secrets.TEST_SECRET}}
      #    az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
      #    tf_actions_version: ${{ env.tf_version }}
      #    tg_actions_version: ${{ env.tg_version }}
      #    tf_actions_binary: 'terragrunt'
      #    tf_actions_subcommand: 'fmt'
      #    tf_actions_working_dir: ${{ env.tf_working_dir }}
      #    tf_actions_comment: true
      #
      #- name: 'Terragrunt Init'
      #  uses: ./action
      #  with:
      #    sops_path: "./secure/stuff.yaml"
      #    az_APPID:  ${{ env.az_APPID }}
      #    az_TENANTID:  ${{ env.az_APPTENANT }}
      #    az_SECRET:  ${{ env.az_SECRET }}
      #    az_SUBID: ${{secrets.TEST_SECRET}}
      #    az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
      #    tf_actions_version: ${{ env.tf_version }}
      #    tg_actions_version: ${{ env.tg_version }}
      #    tf_actions_binary: 'terragrunt'
      #    tf_actions_subcommand: 'init'
      #    tf_actions_working_dir: ${{ env.tf_working_dir }}
      #    tf_actions_comment: true
      #
      #- name: 'Terragrunt Plan'
      #  uses: ./action
      #  with:
      #    sops_path: "./secure/stuff.yaml"
      #    az_APPID:  ${{ env.az_APPID }}
      #    az_TENANTID:  ${{ env.az_APPTENANT }}
      #    az_SECRET:  ${{ env.az_SECRET }}
      #    az_SUBID: ${{secrets.TEST_SECRET}}
      #    az_STORAGE_KEY: ${{secrets.STORAGE_KEY}}
      #    tf_actions_version: ${{ env.tf_version }}
      #    tg_actions_version: ${{ env.tg_version }}
      #    tf_actions_binary: 'terragrunt'
      #    tf_actions_subcommand: 'plan'
      #    tf_actions_working_dir: ${{ env.tf_working_dir }}
      #    tf_actions_comment: true

      - name: 'ChangedFiles'
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: 'List Changed Files'
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "Do something with this ${changed_file}."
          done

      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
          
      - name: Run Infracost
        run: infracost breakdown --path=${{ env.tf_working_dir }} --format=json --out-file=${{ env.tf_working_dir }}infracost.json
        
      - name: Post the comment
        uses: infracost/actions/comment@v1
        with:
          path: ${{ env.tf_working_dir }}infracost.json
          behavior: update
      

#the-commons-project/terragrunt-github-actions@master
